

Gcc.LinuxPC
{
    Debug
    {
        ccExe           = "gcc-4.7"
        cxxExe          = "g++-4.7"
        linker          = "g++-4.7"
    }
    
    Release
    {
        ccExe           = "gcc-4.7"
        cxxExe          = "g++-4.7"
        linker          = "g++-4.7"
    }
    
    Debug
    {
        ccFlags     = ${Gcc.LinuxPC.Debug.ccFlags} ["-std=c99", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
        cxxFlags    = ${Gcc.LinuxPC.Debug.cxxFlags} ["-std=c++11", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
    }
    
    Release
    {
        ccFlags     = ${Gcc.LinuxPC.Release.ccFlags} ["-std=c99", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
        cxxFlags    = ${Gcc.LinuxPC.Release.cxxFlags} ["-std=c++11", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
    }
}

Clang.LinuxPC
{
    Debug
    {
        ccFlags     = ${Clang.LinuxPC.Debug.ccFlags} ["-std=c99", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
        cxxFlags    = ${Clang.LinuxPC.Debug.cxxFlags} ["-std=c++11", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
    }
    
    Release
    {
        ccFlags     = ${Clang.LinuxPC.Release.ccFlags} ["-std=c99", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
        cxxFlags    = ${Clang.LinuxPC.Release.cxxFlags} ["-std=c++11", "-Wall", "-Wextra", "-Werror", "-Wno-unused-parameter", "-Wno-strict-aliasing"]
    }
}


